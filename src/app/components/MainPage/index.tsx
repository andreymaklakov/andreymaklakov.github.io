import React, { FC } from "react";

const MainPage: FC = () => {
  return (
    <div>
      <p>
        Cтек разработки: typescript, react, sass/scss, vite(сборщик проекта)
        API: dadata.ru Задания:
      </p>
      <br />
      <p>
        1. Выполнить верстку страницы из figma.{" "}
        <a href="https://www.figma.com/file/Ws3wFnGWBYw5OjhNv4K2Kk/ITMO?node-id=0%3A1&t=EpECoYI0GXfcBuQF-0">
          https://www.figma.com/file/Ws3wFnGWBYw5OjhNv4K2Kk/ITMO?node-id=0%3A1&t=EpECoYI0GXfcBuQF-0
        </a>
      </p>
      <br />
      <p>
        2. Написать код, который определяет текущую геолокацию браузера. По
        полученным координатам с помощью сервиса{" "}
        <a href="https://dadata.ru/api/geolocate/">
          https://dadata.ru/api/geolocate/
        </a>{" "}
        определить город нахождения пользователя. Вывести значение населенного
        пункта и координат на страницу.
      </p>
      <br />
      <p>
        3. Разработать интерфейс верхняя часть - поиск организации по частичному
        совпадению Разместить комбобоксы (раскрывающийся список) по названию
        организации по адресу по ИНН Комбобокс - поле ввода с функцией
        автозаполнения. При вводе значения в комбобоксе, вызывается апи поиска
        частичных совпадений организации, список комбобокса заполняется
        найденными значениями{" "}
        <a href="https://dadata.ru/suggestions">
          https://dadata.ru/suggestions
        </a>{" "}
        нижняя часть - инфо о компании{" "}
        <a href="https://dadata.ru/api/find-party/">
          https://dadata.ru/api/find-party/
        </a>{" "}
        Вывести информацию о компании, которое возвращает апи, например: ИНН
        наименование адрес статус дата основания дата ликвидации основатели
        компании если у компании есть филиалы - вывести ссылки на них - переход
        по ссылке открывает ту же страницу но с данными по филиалу. Визуализация
        информации (дизайн) - на усмотрение исполнителя
      </p>
      <br />
      <p>4. Залить исходный код в GitHub репозиторий, сделать его публичным.</p>
      <br />
      <p>
        5. Выполнить развертывание собранной страницы с помощью GitHub Pages
        Результат: Исходный код в публичном Git репозитории, инструкция по
        сборке проекта, опубликованная страница на github pages.
      </p>
    </div>
  );
};

export default MainPage;
